const m="modulepreload",p=function(c){return"/"+c},u={},E=function(c,i,f){let a=Promise.resolve();if(i&&i.length>0){const n=document.getElementsByTagName("link"),e=document.querySelector("meta[property=csp-nonce]"),d=(e==null?void 0:e.nonce)||(e==null?void 0:e.getAttribute("nonce"));a=Promise.all(i.map(t=>{if(t=p(t),t in u)return;u[t]=!0;const o=t.endsWith(".css"),h=o?'[rel="stylesheet"]':"";if(f)for(let l=n.length-1;l>=0;l--){const s=n[l];if(s.href===t&&(!o||s.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${t}"]${h}`))return;const r=document.createElement("link");if(r.rel=o?"stylesheet":m,o||(r.as="script",r.crossOrigin=""),r.href=t,d&&r.setAttribute("nonce",d),document.head.appendChild(r),o)return new Promise((l,s)=>{r.addEventListener("load",l),r.addEventListener("error",()=>s(new Error(`Unable to preload CSS for ${t}`)))})}))}return a.then(()=>c()).catch(n=>{const e=new Event("vite:preloadError",{cancelable:!0});if(e.payload=n,window.dispatchEvent(e),!e.defaultPrevented)throw n})};export{E as _};
